{"version":3,"sources":["../../src/parsePdb.js"],"names":["Object","defineProperty","exports","value","Residue_1","require","Model_1","Chain_1","Molecule_1","ParsePDB","pdb","_rsrz","_outlDict","_pdbID","toLowerCase","_molecules","_chainsArray","_modelArray","_allowed","_favored","_ramaOutl","_sidechainOutl","_clashes","_outliersList","_residueOnCanvas","link","xmlHttp","XMLHttpRequest","open","pdbID","send","status","molecules","JSON","parse","responseText","mols","mol","chains","chain","models","mod","residues","res","outlier_types","residue_number","outliersType","indexOf","chainsArray","chain_id","push","modelArray","model_id","resid","residue","Residue","residue_name","phi","psi","rama","cis_peptide","author_residue_number","outliersList","favored","allowed","sort","a","b","num","forEach","index","length","aa","prePro","Model","modelId","Chain","chainId","Molecule","entity_id","entityId","default"],"mappings":"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","file":"parsePdb.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Residue_1 = require(\"./Residue\");\r\nconst Model_1 = require(\"./Model\");\r\nconst Chain_1 = require(\"./Chain\");\r\nconst Molecule_1 = require(\"./Molecule\");\r\nclass ParsePDB {\r\n    constructor(pdb) {\r\n        this._rsrz = {};\r\n        this._outlDict = {};\r\n        this._pdbID = pdb.toLowerCase();\r\n        this._molecules = [];\r\n        this._chainsArray = [];\r\n        this._modelArray = [];\r\n        this._allowed = 0;\r\n        this._favored = 0;\r\n        this._ramaOutl = 0;\r\n        this._sidechainOutl = 0;\r\n        this._clashes = 0;\r\n        this._outliersList = [];\r\n        this._residueOnCanvas = 0;\r\n    }\r\n    get residueOnCanvas() {\r\n        return this._residueOnCanvas;\r\n    }\r\n    set residueOnCanvas(value) {\r\n        this._residueOnCanvas = value;\r\n    }\r\n    get pdbID() {\r\n        return this._pdbID;\r\n    }\r\n    set pdbID(value) {\r\n        this._pdbID = value;\r\n    }\r\n    get molecules() {\r\n        return this._molecules;\r\n    }\r\n    get outliersList() {\r\n        return this._outliersList;\r\n    }\r\n    set outliersList(value) {\r\n        this._outliersList = value;\r\n    }\r\n    get favored() {\r\n        return this._favored;\r\n    }\r\n    set favored(value) {\r\n        this._favored = value;\r\n    }\r\n    get allowed() {\r\n        return this._allowed;\r\n    }\r\n    set allowed(value) {\r\n        this._allowed = value;\r\n    }\r\n    get ramaOutl() {\r\n        return this._ramaOutl;\r\n    }\r\n    set ramaOutl(value) {\r\n        this._ramaOutl = value;\r\n    }\r\n    get sidechainOutl() {\r\n        return this._sidechainOutl;\r\n    }\r\n    set sidechainOutl(value) {\r\n        this._sidechainOutl = value;\r\n    }\r\n    get clashes() {\r\n        return this._clashes;\r\n    }\r\n    set clashes(value) {\r\n        this._clashes = value;\r\n    }\r\n    downloadAndParse(link = 'https://www.ebi.ac.uk/pdbe/api/validation/rama_sidechain_listing/entry/') {\r\n        const xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.open('GET', `${link}${this.pdbID}`, false);\r\n        xmlHttp.send();\r\n        if (xmlHttp.status !== 200) {\r\n            return;\r\n        }\r\n        else {\r\n            const molecules = JSON.parse(xmlHttp.responseText)[this._pdbID];\r\n            this.parse(molecules);\r\n            xmlHttp.open('GET', 'https://www.ebi.ac.uk/pdbe/api/validation/residuewise_outlier_summary/entry/' + this._pdbID, false);\r\n            xmlHttp.send();\r\n            const mols = JSON.parse(xmlHttp.responseText)[this._pdbID];\r\n            for (const mol of mols.molecules) {\r\n                for (const chain of mol.chains) {\r\n                    for (const mod of chain.models) {\r\n                        for (const res of mod.residues) {\r\n                            if (res.outlier_types[0] == 'RSRZ') {\r\n                                this._rsrz[res.residue_number] = { outliersType: res.outlier_types };\r\n                            }\r\n                            else {\r\n                                if (res.outlier_types.indexOf('clashes') != -1)\r\n                                    this._clashes++;\r\n                                if (res.outlier_types.indexOf('ramachandran_outliers') != -1)\r\n                                    this._ramaOutl++;\r\n                                if (res.outlier_types.indexOf('sidechain_outliers') != -1)\r\n                                    this._sidechainOutl++;\r\n                                this._outlDict[res.residue_number] = { outliersType: res.outlier_types };\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    parse(molecules) {\r\n        for (const mol of molecules.molecules) {\r\n            let chains = [];\r\n            for (const chain of mol.chains) {\r\n                let models = [];\r\n                for (const mod of chain.models) {\r\n                    if (this.chainsArray.indexOf(chain.chain_id) === -1) {\r\n                        this.chainsArray.push(chain.chain_id);\r\n                    }\r\n                    if (this.modelArray.indexOf(mod.model_id) === -1) {\r\n                        this._modelArray.push(mod.model_id);\r\n                    }\r\n                    let residues = [];\r\n                    for (const resid of mod.residues) {\r\n                        const residue = new Residue_1.Residue(resid.residue_name, resid.phi, resid.psi, resid.rama, resid.residue_number, resid.cis_peptide, resid.author_residue_number, this._pdbID);\r\n                        switch (resid.rama) {\r\n                            case 'OUTLIER':\r\n                                this.outliersList.push(residue);\r\n                                break;\r\n                            case 'Favored':\r\n                                this.favored++;\r\n                                break;\r\n                            case 'Allowed':\r\n                                this.allowed++;\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                        residues.push(residue);\r\n                    }\r\n                    residues.sort((a, b) => {\r\n                        if (a.num < b.num)\r\n                            return -1;\r\n                        if (a.num > b.num)\r\n                            return 1;\r\n                        return 0;\r\n                    });\r\n                    residues.forEach((value, index) => {\r\n                        if (index + 1 != residues.length && residues[index + 1].aa == 'PRO') {\r\n                            value.prePro = true;\r\n                        }\r\n                    });\r\n                    models.push(new Model_1.Model(mod.model_id, residues));\r\n                }\r\n                models.sort((a, b) => {\r\n                    if (a.modelId < b.modelId)\r\n                        return -1;\r\n                    if (a.modelId > b.modelId)\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                chains.push(new Chain_1.Chain(chain.chain_id, models));\r\n            }\r\n            chains.sort((a, b) => {\r\n                if (a.chainId < b.chainId)\r\n                    return -1;\r\n                if (a.chainId > b.chainId)\r\n                    return 1;\r\n                return 0;\r\n            });\r\n            this._molecules.push(new Molecule_1.Molecule(mol.entity_id, chains, this._pdbID));\r\n        }\r\n        this._molecules.sort((a, b) => {\r\n            if (a.entityId < b.entityId)\r\n                return -1;\r\n            if (a.entityId > b.entityId)\r\n                return 1;\r\n            return 0;\r\n        });\r\n    }\r\n    get chainsArray() {\r\n        return this._chainsArray;\r\n    }\r\n    get modelArray() {\r\n        return this._modelArray;\r\n    }\r\n    get rsrz() {\r\n        return this._rsrz;\r\n    }\r\n    get outlDict() {\r\n        return this._outlDict;\r\n    }\r\n}\r\nexports.ParsePDB = ParsePDB;\r\nexports.default = ParsePDB;\r\n"]}