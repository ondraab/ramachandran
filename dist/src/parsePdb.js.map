{"version":3,"sources":["../../src/parsePdb.js"],"names":["Object","defineProperty","exports","value","Residue_1","require","Model_1","Chain_1","Molecule_1","ParsePDB","pdb","_rsrz","_outlDict","_pdbID","toLowerCase","_molecules","_chainsArray","_modelArray","_allowed","_favored","_ramaOutl","_sidechainOutl","_clashes","_outliersList","_residueOnCanvas","xmlHttp","XMLHttpRequest","open","send","status","molecules","JSON","parse","responseText","mol","chains","chain","models","mod","chainsArray","indexOf","chain_id","push","modelArray","model_id","residues","resid","residue","Residue","residue_name","phi","psi","rama","residue_number","cis_peptide","author_residue_number","outliersList","favored","allowed","sort","a","b","num","forEach","index","length","aa","prePro","Model","modelId","Chain","chainId","Molecule","entity_id","entityId","mols","res","outlier_types","outliersType","default"],"mappings":"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","file":"parsePdb.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Residue_1 = require(\"./Residue\");\r\nconst Model_1 = require(\"./Model\");\r\nconst Chain_1 = require(\"./Chain\");\r\nconst Molecule_1 = require(\"./Molecule\");\r\nclass ParsePDB {\r\n    constructor(pdb) {\r\n        this._rsrz = {};\r\n        this._outlDict = {};\r\n        this._pdbID = pdb.toLowerCase();\r\n        this._molecules = [];\r\n        this._chainsArray = [];\r\n        this._modelArray = [];\r\n        this._allowed = 0;\r\n        this._favored = 0;\r\n        this._ramaOutl = 0;\r\n        this._sidechainOutl = 0;\r\n        this._clashes = 0;\r\n        this._outliersList = [];\r\n        this._residueOnCanvas = 0;\r\n    }\r\n    get residueOnCanvas() {\r\n        return this._residueOnCanvas;\r\n    }\r\n    set residueOnCanvas(value) {\r\n        this._residueOnCanvas = value;\r\n    }\r\n    get pdbID() {\r\n        return this._pdbID;\r\n    }\r\n    set pdbID(value) {\r\n        this._pdbID = value;\r\n    }\r\n    get molecules() {\r\n        return this._molecules;\r\n    }\r\n    get outliersList() {\r\n        return this._outliersList;\r\n    }\r\n    set outliersList(value) {\r\n        this._outliersList = value;\r\n    }\r\n    get favored() {\r\n        return this._favored;\r\n    }\r\n    set favored(value) {\r\n        this._favored = value;\r\n    }\r\n    get allowed() {\r\n        return this._allowed;\r\n    }\r\n    set allowed(value) {\r\n        this._allowed = value;\r\n    }\r\n    get ramaOutl() {\r\n        return this._ramaOutl;\r\n    }\r\n    set ramaOutl(value) {\r\n        this._ramaOutl = value;\r\n    }\r\n    get sidechainOutl() {\r\n        return this._sidechainOutl;\r\n    }\r\n    set sidechainOutl(value) {\r\n        this._sidechainOutl = value;\r\n    }\r\n    get clashes() {\r\n        return this._clashes;\r\n    }\r\n    set clashes(value) {\r\n        this._clashes = value;\r\n    }\r\n    downloadAndParse() {\r\n        const xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.open('GET', 'https://www.ebi.ac.uk/pdbe/api/validation/rama_sidechain_listing/entry/' + this._pdbID, false);\r\n        xmlHttp.send();\r\n        if (xmlHttp.status !== 200) {\r\n            return;\r\n        }\r\n        else {\r\n            const molecules = JSON.parse(xmlHttp.responseText)[this._pdbID];\r\n            for (const mol of molecules.molecules) {\r\n                let chains = [];\r\n                for (const chain of mol.chains) {\r\n                    let models = [];\r\n                    for (const mod of chain.models) {\r\n                        if (this.chainsArray.indexOf(chain.chain_id) === -1) {\r\n                            this.chainsArray.push(chain.chain_id);\r\n                        }\r\n                        if (this.modelArray.indexOf(mod.model_id) === -1) {\r\n                            this._modelArray.push(mod.model_id);\r\n                        }\r\n                        let residues = [];\r\n                        for (const resid of mod.residues) {\r\n                            const residue = new Residue_1.Residue(resid.residue_name, resid.phi, resid.psi, resid.rama, resid.residue_number, resid.cis_peptide, resid.author_residue_number, this._pdbID);\r\n                            switch (resid.rama) {\r\n                                case 'OUTLIER':\r\n                                    this.outliersList.push(residue);\r\n                                    break;\r\n                                case 'Favored':\r\n                                    this.favored++;\r\n                                    break;\r\n                                case 'Allowed':\r\n                                    this.allowed++;\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            residues.push(residue);\r\n                        }\r\n                        residues.sort((a, b) => {\r\n                            if (a.num < b.num)\r\n                                return -1;\r\n                            if (a.num > b.num)\r\n                                return 1;\r\n                            return 0;\r\n                        });\r\n                        residues.forEach((value, index) => {\r\n                            if (index + 1 != residues.length && residues[index + 1].aa == 'PRO') {\r\n                                value.prePro = true;\r\n                            }\r\n                        });\r\n                        models.push(new Model_1.Model(mod.model_id, residues));\r\n                    }\r\n                    models.sort((a, b) => {\r\n                        if (a.modelId < b.modelId)\r\n                            return -1;\r\n                        if (a.modelId > b.modelId)\r\n                            return 1;\r\n                        return 0;\r\n                    });\r\n                    chains.push(new Chain_1.Chain(chain.chain_id, models));\r\n                }\r\n                chains.sort((a, b) => {\r\n                    if (a.chainId < b.chainId)\r\n                        return -1;\r\n                    if (a.chainId > b.chainId)\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                this._molecules.push(new Molecule_1.Molecule(mol.entity_id, chains, this._pdbID));\r\n            }\r\n            this._molecules.sort((a, b) => {\r\n                if (a.entityId < b.entityId)\r\n                    return -1;\r\n                if (a.entityId > b.entityId)\r\n                    return 1;\r\n                return 0;\r\n            });\r\n            xmlHttp.open('GET', 'https://www.ebi.ac.uk/pdbe/api/validation/residuewise_outlier_summary/entry/' + this._pdbID, false);\r\n            xmlHttp.send();\r\n            const mols = JSON.parse(xmlHttp.responseText)[this._pdbID];\r\n            for (const mol of mols.molecules) {\r\n                for (const chain of mol.chains) {\r\n                    for (const mod of chain.models) {\r\n                        for (const res of mod.residues) {\r\n                            if (res.outlier_types[0] == 'RSRZ') {\r\n                                this._rsrz[res.residue_number] = { outliersType: res.outlier_types };\r\n                            }\r\n                            else {\r\n                                if (res.outlier_types.indexOf('clashes') != -1)\r\n                                    this._clashes++;\r\n                                if (res.outlier_types.indexOf('ramachandran_outliers') != -1)\r\n                                    this._ramaOutl++;\r\n                                if (res.outlier_types.indexOf('sidechain_outliers') != -1)\r\n                                    this._sidechainOutl++;\r\n                                this._outlDict[res.residue_number] = { outliersType: res.outlier_types };\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    get chainsArray() {\r\n        return this._chainsArray;\r\n    }\r\n    get modelArray() {\r\n        return this._modelArray;\r\n    }\r\n    get rsrz() {\r\n        return this._rsrz;\r\n    }\r\n    get outlDict() {\r\n        return this._outlDict;\r\n    }\r\n}\r\nexports.ParsePDB = ParsePDB;\r\nexports.default = ParsePDB;\r\n"]}