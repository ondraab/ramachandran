{"version":3,"sources":["../../src/parsePdb.js"],"names":["Object","defineProperty","exports","value","Residue_1","require","Model_1","Chain_1","Molecule_1","ParsePDB","pdb","_rsrz","_outlDict","pdbID","toLowerCase","_moleculs","_chainsArray","_modelArray","_residueArray","xmlHttp","XMLHttpRequest","open","send","status","molecules","JSON","parse","responseText","mol","chains","chain","models","mod","chainsArray","indexOf","chain_id","push","modelArray","model_id","residues","resid","Residue","residue_name","phi","psi","rama","residue_number","cis_peptide","author_residue_number","sort","a","b","num","forEach","index","length","aa","prePro","Model","modelId","Chain","chainId","Molecule","entity_id","entityId","mols","res","outlier_types","outliersType","default"],"mappings":"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","file":"parsePdb.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Residue_1 = require(\"./Residue\");\r\nconst Model_1 = require(\"./Model\");\r\nconst Chain_1 = require(\"./Chain\");\r\nconst Molecule_1 = require(\"./Molecule\");\r\nclass ParsePDB {\r\n    constructor(pdb) {\r\n        this._rsrz = {};\r\n        this._outlDict = {};\r\n        this.pdbID = pdb.toLowerCase();\r\n        this._moleculs = [];\r\n        this._chainsArray = [];\r\n        this._modelArray = [];\r\n        this._residueArray = [];\r\n    }\r\n    get moleculs() {\r\n        return this._moleculs;\r\n    }\r\n    downloadAndParse() {\r\n        const xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.open('GET', 'https://www.ebi.ac.uk/pdbe/api/validation/rama_sidechain_listing/entry/' + this.pdbID, false);\r\n        xmlHttp.send();\r\n        if (xmlHttp.status !== 200) {\r\n            return;\r\n        }\r\n        else {\r\n            const molecules = JSON.parse(xmlHttp.responseText)[this.pdbID];\r\n            for (const mol of molecules.molecules) {\r\n                let chains = [];\r\n                for (const chain of mol.chains) {\r\n                    let models = [];\r\n                    for (const mod of chain.models) {\r\n                        if (this.chainsArray.indexOf(chain.chain_id) === -1) {\r\n                            this.chainsArray.push(chain.chain_id);\r\n                        }\r\n                        if (this.modelArray.indexOf(mod.model_id) === -1) {\r\n                            this._modelArray.push(mod.model_id);\r\n                        }\r\n                        let residues = [];\r\n                        for (const resid of mod.residues) {\r\n                            residues.push(new Residue_1.Residue(resid.residue_name, resid.phi, resid.psi, resid.rama, resid.residue_number, resid.cis_peptide, resid.author_residue_number));\r\n                        }\r\n                        residues.sort((a, b) => {\r\n                            if (a.num < b.num)\r\n                                return -1;\r\n                            if (a.num > b.num)\r\n                                return 1;\r\n                            return 0;\r\n                        });\r\n                        residues.forEach((value, index) => {\r\n                            if (index + 1 != residues.length && residues[index + 1].aa == 'PRO') {\r\n                                value.prePro = true;\r\n                            }\r\n                        });\r\n                        models.push(new Model_1.Model(mod.model_id, residues));\r\n                    }\r\n                    models.sort((a, b) => {\r\n                        if (a.modelId < b.modelId)\r\n                            return -1;\r\n                        if (a.modelId > b.modelId)\r\n                            return 1;\r\n                        return 0;\r\n                    });\r\n                    chains.push(new Chain_1.Chain(chain.chain_id, models));\r\n                }\r\n                chains.sort((a, b) => {\r\n                    if (a.chainId < b.chainId)\r\n                        return -1;\r\n                    if (a.chainId > b.chainId)\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                this._moleculs.push(new Molecule_1.Molecule(mol.entity_id, chains));\r\n            }\r\n            this._moleculs.sort((a, b) => {\r\n                if (a.entityId < b.entityId)\r\n                    return -1;\r\n                if (a.entityId > b.entityId)\r\n                    return 1;\r\n                return 0;\r\n            });\r\n            xmlHttp.open('GET', 'https://www.ebi.ac.uk/pdbe/api/validation/residuewise_outlier_summary/entry/' + this.pdbID, false);\r\n            xmlHttp.send();\r\n            const mols = JSON.parse(xmlHttp.responseText)[this.pdbID];\r\n            for (const mol of mols.molecules) {\r\n                for (const chain of mol.chains) {\r\n                    for (const mod of chain.models) {\r\n                        for (const res of mod.residues) {\r\n                            if (res.outlier_types[0] === 'RSRZ') {\r\n                                this._rsrz[res.residue_number] = { outliersType: res.outlier_types };\r\n                            }\r\n                            else {\r\n                                this._outlDict[res.residue_number] = { outliersType: res.outlier_types };\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    get chainsArray() {\r\n        return this._chainsArray;\r\n    }\r\n    get modelArray() {\r\n        return this._modelArray;\r\n    }\r\n    get residueArray() {\r\n        return this._residueArray;\r\n    }\r\n    get rsrz() {\r\n        return this._rsrz;\r\n    }\r\n    get outlDict() {\r\n        return this._outlDict;\r\n    }\r\n}\r\nexports.ParsePDB = ParsePDB;\r\nexports.default = ParsePDB;\r\n"]}