{"version":3,"sources":["../../icon-toggle-finished/icon-toggle.js"],"names":["IconToggle","html","toggleIcon","type","String","pressed","Boolean","notify","reflectToAttribute","value","addEventListener","toggle","bind","PolymerElement","customElements","define"],"mappings":";;;;;;AAAA;;AACA;;;;;;;;;;IAEMA,U;;;;;wBACkB;AACpB,iBAAOC,oBAAP;AAgBD;;;wBACwB;AACvB,aAAO;AACLC,oBAAY;AACVC,gBAAMC;AADI,SADP;AAILC,iBAAS;AACPF,gBAAMG,OADC;AAEPC,kBAAQ,IAFD;AAGPC,8BAAoB,IAHb;AAIPC,iBAAO;AAJA;AAJJ,OAAP;AAWD;;;AACD,wBAAc;AAAA;;AAAA;;AAEZ,UAAKC,gBAAL,CAAsB,OAAtB,EAA+B,MAAKC,MAAL,CAAYC,IAAZ,OAA/B;AAFY;AAGb;;;;6BACQ;AACP,WAAKP,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;;;;EAtCsBQ,8B;;AAyCzBC,eAAeC,MAAf,CAAsB,aAAtB,EAAqCf,UAArC","file":"icon-toggle.js","sourcesContent":["import { PolymerElement, html } from '@polymer/polymer/polymer-element.js';\nimport '@polymer/iron-icon/iron-icon.js';\n\nclass IconToggle extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n        iron-icon {\n          fill: var(--icon-toggle-color, rgba(0,0,0,0));\n          stroke: var(--icon-toggle-outline-color, currentcolor);\n        }\n        :host([pressed]) iron-icon {\n          fill: var(--icon-toggle-pressed-color, currentcolor);\n        }\n      </style>\n      <!-- shadow DOM goes here -->\n      <iron-icon icon=\"[[toggleIcon]]\"></iron-icon>\n    `;\n  }\n  static get properties () {\n    return {\n      toggleIcon: {\n        type: String\n      },\n      pressed: {\n        type: Boolean,\n        notify: true,\n        reflectToAttribute: true,\n        value: false\n      }\n    };\n  }\n  constructor() {\n    super();\n    this.addEventListener('click', this.toggle.bind(this));\n  }\n  toggle() {\n    this.pressed = !this.pressed;\n  }\n}\n\ncustomElements.define('icon-toggle', IconToggle);\n"]}